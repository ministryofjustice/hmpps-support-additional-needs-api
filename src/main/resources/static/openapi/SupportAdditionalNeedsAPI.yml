openapi: 3.1.1
info:
  title: Support For Additional Needs API
  version: '0.2.4'
  description: Support For Additional Needs API
  contact:
    name: Learning and Work Progress team
    email: learningandworkprogress@digital.justice.gov.uk
servers:
  - url: https://support-additional-needs-api-dev.hmpps.service.justice.gov.uk
    description: Development
  - url: https://support-additional-needs-api-preprod.hmpps.service.justice.gov.uk
    description: Pre-Production
  - url: https://support-additional-needs-api.hmpps.service.justice.gov.uk
    description: Production
  - url: http://localhost:8080
    description: Local

security:
  - bearerAuth: [ ]

#
# --------------------------------------------------------------------------------
#
paths:
  #
  # --------------------------------------------------------------------------------
  # RESTful style endpoints start here
  # --------------------------------------------------------------------------------
  #

  '/search/prisons/{prisonId}/people':
    get:
      summary: List people in the specified prison, optionally filtering on various prisoner and SAN related fields.
      description: |
        An API that allows searching, filtering and sorting of people in prison and their Additional Needs.
        
        **Role Requirements:**
        Access to this endpoint requires one of the following roles:
          - `ROLE_SUPPORT_ADDITIONAL_NEEDS__SEARCH__RO`
      tags:
        - Search
      operationId: search-by-prison
      parameters:
        - $ref: "#/components/parameters/prisonIdPathParameter"
        - $ref: "#/components/parameters/prisonNameOrNumberQueryStringParameter"
        - $ref: "#/components/parameters/sortByQueryStringParameter"
        - $ref: "#/components/parameters/sortDirectionQueryStringParameter"
        - $ref: "#/components/parameters/pageNumberQueryStringParameter"
        - $ref: "#/components/parameters/pageSizeQueryStringParameter"
      responses:
        '200':
          $ref: '#/components/responses/SearchByPrison'
        '400':
          $ref: '#/components/responses/400Error'

  '/profile/{prisonNumber}/conditions':
    parameters:
      - $ref: "#/components/parameters/prisonNumberPathParameter"
    post:
      summary: Adds one or more conditions.
      description: |
       
        **Role Requirements:**
        Access to this endpoint requires one of the following roles:
          - `ROLE_SUPPORT_ADDITIONAL_NEEDS__SEARCH__RW` (Read-Write)
      tags:
        - Condition
      responses:
        '200':
          $ref: '#/components/responses/ConditionList'
        '400':
          $ref: '#/components/responses/400Error'
      operationId: post-conditions
      requestBody:
        $ref: '#/components/requestBodies/CreateConditionList'
    get:
      summary: Retrieves the list of conditions.
      description: |
        
        **Role Requirements:**
        Access to this endpoint requires one of the following roles:
          - `ROLE_SUPPORT_ADDITIONAL_NEEDS__SEARCH__RW` (Read-Only)
      tags:
        - Condition
      responses:
        '200':
          $ref: '#/components/responses/ConditionList'
        '400':
          $ref: '#/components/responses/400Error'
      operationId: get-conditions
  '/profile/{prisonNumber}/conditions/{conditionReference}':
    parameters:
      - $ref: "#/components/parameters/prisonNumberPathParameter"
      - name: conditionReference
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: UUID of the specific condition to update
    put:
      summary: Updates a single condition by UUID.
      description: |
        Updates a specific condition associated with the given prison number.

        **Role Requirements:**
        Access to this endpoint requires one of the following roles:
          - `ROLE_SUPPORT_ADDITIONAL_NEEDS__SEARCH__RW` (Read-Write)
      tags:
        - Condition
      operationId: update-condition
      requestBody:
        $ref: '#/components/requestBodies/UpdateCondition'
      responses:
        '200':
          $ref: '#/components/responses/Condition'
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          description: Condition not found

  '/profile/{prisonNumber}/challenges':
    parameters:
      - $ref: "#/components/parameters/prisonNumberPathParameter"
    post:
      summary: Adds one or more challenges.
      description: |

        **Role Requirements:**
        Access to this endpoint requires one of the following roles:
          - `ROLE_SUPPORT_ADDITIONAL_NEEDS__SEARCH__RW` (Read-Write)
      tags:
        - Challenge
      responses:
        '200':
          $ref: '#/components/responses/ChallengeList'
        '400':
          $ref: '#/components/responses/400Error'
      operationId: post-challenges
      requestBody:
        $ref: '#/components/requestBodies/CreateChallengeList'
    get:
      summary: Retrieves the list of challenges.
      description: |

        **Role Requirements:**
        Access to this endpoint requires one of the following roles:
          - `ROLE_SUPPORT_ADDITIONAL_NEEDS__SEARCH__RW` (Read-Only)
      tags:
        - Challenge
      responses:
        '200':
          $ref: '#/components/responses/ChallengeList'
        '400':
          $ref: '#/components/responses/400Error'
      operationId: get-challenges
  '/profile/{prisonNumber}/challenges/{challengeReference}':
    parameters:
      - $ref: "#/components/parameters/prisonNumberPathParameter"
      - name: challengeReference
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: UUID of the specific challenge to update
    put:
      summary: Updates a single challenge by UUID.
      description: |
        Updates a specific challenge associated with the given prison number.

        **Role Requirements:**
        Access to this endpoint requires one of the following roles:
          - `ROLE_SUPPORT_ADDITIONAL_NEEDS__SEARCH__RW` (Read-Write)
      tags:
        - Challenge
      operationId: update-challenge
      requestBody:
        $ref: '#/components/requestBodies/UpdateChallenge'
      responses:
        '200':
          $ref: '#/components/responses/Challenge'
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          description: Challenge not found

  '/profile/{prisonNumber}/reviews/review-schedules':
    parameters:
      - $ref: "#/components/parameters/prisonNumberPathParameter"
    get:
      summary: Lists all Plan Review Schedules (past and scheduled) for a prisoner
      description: |
        Returns all Review schedules for the specified prisoner. 

        The data will be returned as a list ordered by last updated date then by version number. 

        It is possible for a review schedule to be updated therefore this endpoint will return all versions of a
        review schedule - the highest version number will be the most recent schedule. 

        **Role Requirements:**
        Access to this endpoint requires one of the following roles:
          - `ROLE_SUPPORT_ADDITIONAL_NEEDS__ELSP__RO` (Read-Only)
          - `ROLE_SUPPORT_ADDITIONAL_NEEDS__ELSP__RW` (Read-Write)

      tags:
        - Plan Reviews
      responses:
        '200':
          $ref: '#/components/responses/GetReviewSchedules'
        '404':
          $ref: '#/components/responses/404Error'
      operationId: get-review-schedules

  '/profile/{prisonNumber}/plan-creation-schedule':
    parameters:
      - $ref: "#/components/parameters/prisonNumberPathParameter"
    get:
      summary: Returns the plan creation Schedule for a prisoner
      description: |
        Returns the plan creation schedule for the specified prisoner. 

        **Role Requirements:**
        Access to this endpoint requires one of the following roles:
          - `ROLE_SUPPORT_ADDITIONAL_NEEDS__ELSP__RO` (Read-Only)
          - `ROLE_SUPPORT_ADDITIONAL_NEEDS__ELSP__RW` (Read-Write)

      tags:
        - Plan
      responses:
        '200':
          $ref: '#/components/responses/GetPlanCreationSchedule'
        '404':
          $ref: '#/components/responses/404Error'
      operationId: get-plan-creation-schedule
  '/reference-data/{domain}':
    get:
      tags:
        - Reference Data
      summary: Retrieve all reference data for a domain.
      description: |-
        Get all reference data for a domain e.g. CONDITION
        
        **Role Requirements:**
        Access to this endpoint requires one of the following roles:
          - `ROLE_SUPPORT_ADDITIONAL_NEEDS__ELSP__RO` (Read-Only)
          - `ROLE_SUPPORT_ADDITIONAL_NEEDS__ELSP__RW` (Read-Write)
      operationId: getReferenceData
      parameters:
        - name: domain
          in: path
          description: Reference data domain.
          required: true
          schema:
            type: string
            enum:
              - CONDITION
              - CHALLENGE
              - STRENGTH
        - name: includeInactive
          in: query
          description: Include inactive reference data. Defaults to false
          required: false
          schema:
            type: boolean
      responses:
        '200':
          $ref: '#/components/responses/ReferenceDataResponse'
        '404':
          $ref: '#/components/responses/404Error'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  #
  # Request Body Definitions
  # --------------------------------------------------------------------------------
  requestBodies:
    CreateConditionList:
      description: Request body to create conditions for a person.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateConditionsRequest'
    UpdateCondition:
      description: Request body to update a condition for a person.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateConditionRequest'
    CreateChallengeList:
      description: Request body to create challenges for a person.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateChallengesRequest'
    UpdateChallenge:
      description: Request body to update a challenge for a person.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateChallengeRequest'
  #
  # Schema and Enum Definitions
  # --------------------------------------------------------------------------------
  schemas:
    PrisonId:
      type: string
      description: The Prison identifier.
      example: BXI
      pattern: "^[A-Z]{3}$"

    SearchSortField:
      type: string
      enum:
        - PRISONER_NAME
        - PRISON_NUMBER
        - CELL_LOCATION
        - RELEASE_DATE

    SearchSortDirection:
      type: string
      enum:
        - ASC
        - DESC

    ErrorResponse:
      title: ErrorResponse
      description: |
        A generic response body object describing errors in a web request, and can be used to communicate several
        different types of error condition such as (but not limited to) `400 BAD REQUEST`, `409 CONFLICT` etc.
      properties:
        status:
          description: The HTTP status code.
          type: integer
          example: 400
        errorCode:
          description: An optional application specific error code.
          type: string
        userMessage:
          description: An optional human readable description of the error.
          type: string
          example: 'No Plan found for prisoner [A1234BC]'
        developerMessage:
          description: An optional error message that may have more technical information for developers.
          type: string
        moreInfo:
          description: Optional more detailed information about the error.
          type: string
      required:
        - status

    SentenceType:
      type: string
      description: An enumeration of prisoner sentence types.
      enum:
        - RECALL
        - DEAD
        - INDETERMINATE_SENTENCE
        - SENTENCED
        - CONVICTED_UNSENTENCED
        - CIVIL_PRISONER
        - IMMIGRATION_DETAINEE
        - REMAND
        - UNKNOWN
        - OTHER

    SearchByPrisonResponse:
      title: SearchByPrisonResponse
      description: Response body containing a Search by prison paginated results response.
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        people:
          type: array
          description: A List containing zero or more people matching the search.
          items:
            $ref: '#/components/schemas/Person'
      required:
        - people
        - pagination

    PaginationMetaData:
      description: Pagination metadata for the search results.
      type: object
      properties:
        totalElements:
          type: integer
          description: Total number of elements matching the criteria
          example: 100
        totalPages:
          type: integer
          description: Total number of pages
          example: 5
        page:
          type: integer
          description: Current page number
          example: 2
        last:
          type: boolean
          description: Indicates this is the last page
          example: false
        first:
          type: boolean
          description: Indicates this is the first page
          example: false
        pageSize:
          type: integer
          description: Number of items per page
          example: 20
      required:
        - totalElements
        - totalPages
        - page
        - last
        - first
        - pageSize

    AuditedResource:
      title: AuditedResource
      type: object
      properties:
        createdBy:
          type: string
          description: The DPS username of the person who created this resource.
          example: 'asmith_gen'
        createdByDisplayName:
          type: string
          description: The display name of the person who created this resource.
          example: 'Alex Smith'
        createdAt:
          type: string
          format: date-time
          description: An ISO-8601 timestamp representing when this resource was created.
          example: '2023-06-19T09:39:44Z'
        createdAtPrison:
          type: string
          description: The identifier of the prison that the prisoner was resident at when this resource was created.
          example: 'BXI'
        updatedBy:
          type: string
          description: The DPS username of the person who last updated this resource.
          example: 'asmith_gen'
        updatedByDisplayName:
          type: string
          description: The display name of the person who last updated this resource.
          example: 'Alex Smith'
        updatedAt:
          type: string
          format: date-time
          description: An ISO-8601 timestamp representing when this resource was last updated. This will be the same as the created date if it has not yet been updated.
          example: '2023-06-19T09:39:44Z'
        updatedAtPrison:
          type: string
          description: The identifier of the prison that the prisoner was resident at when this resource was updated.
          example: 'BXI'
      required:
        - createdBy
        - createdByDisplayName
        - createdAt
        - createdAtPrison
        - updatedBy
        - updatedByDisplayName
        - updatedAt
        - updatedAtPrison

    Person:
      title: Person
      description: A summary of a person in prison, including flags as to whether they have Challenges, Strengths, Conditions or Support Recommendations recorded in the service.
      type: object
      properties:
        forename:
          type: string
          description: The prisoner's forename.
          example: Bob
        surname:
          type: string
          description: The prisoner's surname.
          example: Smith
        prisonNumber:
          type: string
          description: The prisoner's NOMIS number.
          example: A1234BC
        dateOfBirth:
          type: string
          format: date
          description: The prisoner's date of birth.
          example: "1999-12-01"
        cellLocation:
          type: string
          description: The prisoner's cell location within prison
          example: "B-3-047"
        releaseDate:
          type: string
          format: date
          description: The prisoner's release date as returned by prisoner-search-api.
          example: "2035-11-01"
        sentenceType:
          $ref: '#/components/schemas/SentenceType'
          description: The prisoner's sentence type.
        additionalNeeds:
          $ref: '#/components/schemas/AdditionalNeedsSummary'
          description: |
            Optional object containing summary data held in this service about the person.  
            The object is only populated if the person has Additional Needs data in this service.  
            If the person does not yet have any data recorded in this service this field will be null.
      required:
        - forename
        - surname
        - prisonNumber
        - dateOfBirth
        - sentenceType

    AdditionalNeedsSummary:
      title: AdditionalNeedsSummary
      description: A summary of a person's Challenges, Strengths, Conditions or Support Recommendations recorded in the service.
      type: object
      properties:
        hasConditions:
          type: boolean
          description: Whether this person has any Conditions recorded in the service.
          example: true
        hasChallenges:
          type: boolean
          description: Whether this person has any Challenges recorded in the service.
          example: true
        hasStrengths:
          type: boolean
          description: Whether this person has any Strengths recorded in the service.
          example: true
        hasSupportRecommendations:
          type: boolean
          description: Whether this person has any Support Recommendations recorded in the service.
          example: true
      required:
        - hasChallenges
        - hasConditions
        - hasStrengths
        - hasSupportRecommendations

    ReviewSchedulesResponse:
      title: ReviewSchedulesResponse
      description: A list of review schedules for a prisoner.
      type: object
      properties:
        reviewSchedules:
          type: array
          description: A List containing zero or more ReviewSchedules.
          items:
            $ref: '#/components/schemas/ReviewScheduleResponse'
      required:
        - reviewSchedules

    ConditionListResponse:
      title: ConditionListResponse
      description: A list of conditions for a prisoner.
      type: object
      properties:
        conditions:
          type: array
          description: A List containing zero or more Conditions.
          items:
            $ref: '#/components/schemas/ConditionResponse'
      required:
        - conditions

    ChallengeListResponse:
      title: ChallengeListResponse
      description: A list of challenges for a prisoner.
      type: object
      properties:
        challenges:
          type: array
          description: A List containing zero or more Challenges.
          items:
            $ref: '#/components/schemas/ChallengeResponse'
      required:
        - challenges

    CreateConditionsRequest:
      title: ConditionListRequest
      description: A request to create a list of conditions for a person.
      type: object
      properties:
        conditions:
          type: array
          description: A List containing zero or more Conditions.
          items:
            $ref: '#/components/schemas/ConditionRequest'
      required:
        - conditions
    CreateChallengesRequest:
      title: ChallengesListRequest
      description: A request to create a list of challenges for a person.
      type: object
      properties:
        challenges:
          type: array
          description: A List containing zero or more Challenges.
          items:
            $ref: '#/components/schemas/ChallengeRequest'
      required:
        - challenges

    ReferenceDataListResponse:
      title: ReferenceDataListResponse
      description: A list of reference data for a given domain.
      type: object
      properties:
        referenceDataList:
          type: array
          description: A List containing zero or more ReferenceDataItem.
          items:
            $ref: '#/components/schemas/ReferenceData'
      required:
        - referenceDataList

    ReferenceData:
      type: object
      description: A reference item belonging to a particular domain
      properties:
        code:
          type: string
          description: The short code of a reference data
        description:
          type: string
          description: The description of the reference data code
        listSequence:
          type: integer
          format: int32
          description: 'The sequence number of the code. Used for ordering codes correctly in lists and drop downs. '
          example: 3
        active:
          type: boolean
          description: whether or not this ref data is active
      required:
        - code

    ReviewScheduleResponse:
      title: ReviewScheduleResponse
      type: object
      allOf:
        - $ref: '#/components/schemas/AuditedResource'
      description: |
        A Scheduled Review of a Prisoner's support additional needs plan.

        A DPS user will create a new Review Schedule (and therefore they will be recorded in the `createdBy...` fields)
        when they complete a prisoner's Induction or their previous Review. IE. completing an Induction will create
        the prisoner's first Review Schedule. Completing their Review will create their next Review Schedule.
      properties:
        reference:
          type: string
          format: uuid
          description: The unique reference of this Review
          example: c88a6c48-97e2-4c04-93b5-98619966447b
        deadlineDate:
          type: string
          format: date
          description: |
            An ISO-8601 date representing date that the Review is due.
          example: '2023-11-19'
        status:
          $ref: '#/components/schemas/ReviewScheduleStatus'
        exemptionReason:
          type: string
          description: |
            An optional reason as to why the Review Schedule is exempted.

            Only present when the `status` field is one of the `EXEMPTION_` statuses and the user entered an exemption 
            reason when marking the Review as Exempted.
        version:
          type: integer
          description: the version number of this schedule (the highest number is the most recent version of this review schedule)
      required:
        - reference
        - deadlineDate
        - status

    ConditionResponse:
      title: ConditionResponse
      type: object
      allOf:
        - $ref: '#/components/schemas/AuditedResource'
      description: |
        A condition a person has.
      properties:
        reference:
          type: string
          format: uuid
          description: The unique reference of this condition
          example: c88a6c48-97e2-4c04-93b5-98619966447b
        source:
          $ref: '#/components/schemas/Source'
        conditionType:
          $ref: '#/components/schemas/ReferenceData'
        active:
          type: boolean
          description: |
            Whether or not this condition is active
      required:
        - reference
        - source
        - conditionType
        - active

    ChallengeResponse:
      title: ChallengeResponse
      type: object
      allOf:
        - $ref: '#/components/schemas/AuditedResource'
      description: |
        A challenge a person has.
      properties:
        reference:
          type: string
          format: uuid
          description: The unique reference of this challenge
          example: c88a6c48-97e2-4c04-93b5-98619966447b
        source:
          $ref: '#/components/schemas/Source'
        challengeType:
          $ref: '#/components/schemas/ReferenceData'
        active:
          type: boolean
          description: |
            Whether or not this challenge is active
      required:
        - reference
        - source
        - challengeType
        - active

    ConditionRequest:
      title: ConditionRequest
      type: object
      description: |
        A condition a person has.
      properties:
        source:
          $ref: '#/components/schemas/Source'
        conditionTypeCode:
          type: string
          description: the reference data type code of the condition
        prisonId:
          $ref: '#/components/schemas/PrisonId'
      required:
        - source
        - conditionType
        - prisonId

    UpdateConditionRequest:
      title: UpdateConditionRequest
      type: object
      description: |
        request object to update a condition.
      properties:
        active:
          type: boolean
          description: Whether or not the condition is active
        prisonId:
          $ref: '#/components/schemas/PrisonId'
          description: The prison the condition was updated at
      required:
        - active
        - prisonId

    ChallengeRequest:
      title: ChallengeRequest
      type: object
      description: |
        A challenge a person has.
      properties:
        source:
          $ref: '#/components/schemas/Source'
        challengeTypeCode:
          type: string
          description: the reference data type code of the challenge
        prisonId:
          $ref: '#/components/schemas/PrisonId'
      required:
        - source
        - challengeType
        - prisonId

    UpdateChallengeRequest:
      title: UpdateChallengeRequest
      type: object
      description: |
        request object to update a challenge.
      properties:
        active:
          type: boolean
          description: Whether or not the challenge is active
        prisonId:
          $ref: '#/components/schemas/PrisonId'
          description: The prison the challenge was updated at
      required:
        - active
        - prisonId

    Source:
      title: Source
      description: Enum of the source of the need.
      type: string
      enum:
        - ALN_SCREENER
        - SELF_DECLARED
        - CONFIRMED_DIAGNOSIS

    ReviewScheduleStatus:
      title: ReviewScheduleStatus
      description: Enum of the various Review Schedule statuses.
      type: string
      enum:
        - SCHEDULED
        - EXEMPT_SYSTEM_TECHNICAL_ISSUE
        - EXEMPT_PRISONER_TRANSFER
        - EXEMPT_PRISONER_RELEASE
        - EXEMPT_PRISONER_DEATH
        - EXEMPT_PRISONER_MERGE
        - EXEMPT_PRISONER_NOT_COMPLY
        - EXEMPT_NOT_IN_EDUCATION
        - EXEMPT_UNKNOWN
        - COMPLETED

    PlanCreationSchedulesResponse:
      title: PlansCreationSchedulesResponse
      description: A list of plan creation schedules for a prisoner.
      type: object
      properties:
        planCreationSchedules:
          type: array
          description: A List containing zero or more PlanCreationSchedules.
          items:
            $ref: '#/components/schemas/PlanCreationScheduleResponse'
      required:
        - planCreationSchedules

    PlanCreationScheduleResponse:
      title: PlanCreationScheduleResponse
      type: object
      allOf:
        - $ref: '#/components/schemas/AuditedResource'
      description: |
        A Plan creation schedule for a Prisoner's support additional needs plan.

      properties:
        reference:
          type: string
          format: uuid
          description: The unique reference of this plan creation schedule
          example: c88a6c48-97e2-4c04-93b5-98619966447b
        deadlineDate:
          type: string
          format: date
          description: |
            An ISO-8601 date representing date that the plan creation is due.
          example: '2023-11-19'
        status:
          $ref: '#/components/schemas/PlanCreationStatus'
        exemptionReason:
          type: string
          description: |
            An optional reason as to why the plan creation Schedule is exempted.

            Only present when the `status` field is one of the `EXEMPTION_` statuses and the user entered an exemption 
            reason when marking the Review as Exempted.
        version:
          type: integer
          description: the version number of this schedule (the highest number is the most recent version of this plan creation schedule)
      required:
        - reference
        - deadlineDate
        - status

    PlanCreationStatus:
      title: PlanCreationStatus
      description: Enum of the various plan creation schedule statuses.
      type: string
      enum:
        - SCHEDULED
        - EXEMPT_SYSTEM_TECHNICAL_ISSUE
        - EXEMPT_PRISONER_TRANSFER
        - EXEMPT_PRISONER_RELEASE
        - EXEMPT_PRISONER_DEATH
        - EXEMPT_PRISONER_MERGE
        - EXEMPT_PRISONER_NOT_COMPLY
        - EXEMPT_NOT_IN_EDUCATION
        - EXEMPT_UNKNOWN
        - COMPLETED


  #
  # Response Body Definitions
  # --------------------------------------------------------------------------------
  responses:
    400Error:
      description: Error response for a HTTP 400 describing fields in the request payload that are in error.
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Headers:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            status: 400
            userMessage: 'Error on field deadlineDate: rejected value [2023-06-01] cannot be in the past'
    404Error:
      description: |
        Error response for a HTTP 404 describing the problem with the request.
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Headers:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            status: 404
            userMessage: 'The prisoner with prisonNumber=[A1234BC] not found'
    409Error:
      description: |
        Error response for a HTTP 409 describing the problem with the request.
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Headers:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            status: 409
            userMessage: 'A resource with reference [c88a6c48-97e2-4c04-93b5-98619966447b] has an unexpected status = ARCHIVED'

    SearchByPrison:
      description: Response body containing a Search by prison results response.
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Headers:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchByPrisonResponse'

    ConditionList:
      description: Response body containing the a list of conditions.
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Headers:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConditionListResponse'

    ChallengeList:
      description: Response body containing the a list of challenges.
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Headers:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChallengeListResponse'

    Condition:
      description: Response body containing a single condition.
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Headers:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConditionResponse'

    Challenge:
      description: Response body containing a single challenge.
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Headers:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChallengeResponse'

    GetReviewSchedules:
      description: Response body containing the a list of review schedules.
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Headers:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReviewSchedulesResponse'

    ReferenceDataResponse:
      description: Response body containing the a list of reference data.
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Headers:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReferenceDataListResponse'

    GetPlanCreationSchedule:
      description: Response body containing the a the plan creation schedule.
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Headers:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PlanCreationSchedulesResponse'


  #
  # Request Body Definitions
  # --------------------------------------------------------------------------------
  #requestBodies:

  parameters:
    prisonIdPathParameter:
      name: prisonId
      in: path
      required: true
      schema:
        type: string
        pattern: "^[A-Z]{3}$"
        example: "BXI"
      description: The ID of the prison
    prisonNumberPathParameter:
      name: prisonNumber
      description: The NOMIS Prison Reference Number of the Prisoner that the operation is being performed on.
      schema:
        type: string
        pattern: "^[A-Z]\\d{4}[A-Z]{2}$"
        example: 'A1234BC'
      in: path
      required: true
    prisonNameOrNumberQueryStringParameter:
      name: prisonerNameOrNumber
      in: query
      description: Filter by prisoner name or prison number
      schema:
        type: string
        example: 'Bloggs'
    sortByQueryStringParameter:
      name: sortBy
      in: query
      description: Column to sort by
      schema:
        $ref: '#/components/schemas/SearchSortField'
        example: 'PRISONER_NAME'
    sortDirectionQueryStringParameter:
      name: sortDirection
      in: query
      description: Sort direction (ascending or descending)
      schema:
        $ref: '#/components/schemas/SearchSortDirection'
        example: 'ASC'
    pageNumberQueryStringParameter:
      name: page
      in: query
      description: Page number for pagination
      schema:
        type: integer
        minimum: 1
        default: 1
        example: 1
    pageSizeQueryStringParameter:
      name: size
      in: query
      description: Number of items per page
      schema:
        type: integer
        minimum: 1
        default: 50
        example: 50
